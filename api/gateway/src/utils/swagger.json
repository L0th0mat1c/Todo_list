{
  "swagger": "2.0",
  "info": {
    "title": "Library API",
    "version": "1.0.0",
    "description": "API Todo list",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "scheme": "Bearer",
      "in": "header"
    }
  },
  "host": "localhost:8000",
  "basePath": "/",
  "tags": [
    {
      "name": "Register",
      "description": "Create an account on API."
    },
    {
      "name": "Login",
      "description": "Connect to the API with yours cr√©dentials."
    },
    {
      "name": "Users",
      "description": "Customer to consume API."
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in system",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create new user in system",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get an user in system by his id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "description": "Update user in system",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User's Id required for update.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to update",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "description": "Delete user in system by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User's Id required for delete.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/todos": {
      "get": {
        "tags": ["Todos"],
        "summary": "Get all todos in system",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Todos"
            }
          }
        }
      },
      "post": {
        "tags": ["Todos"],
        "summary": "Create new todo in system",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Create new todo in system",
        "parameters": [
          {
            "name": "todo",
            "in": "body",
            "description": "Todo that we want to create",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "New todo is created",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "get": {
        "tags": ["Todos"],
        "summary": "Get an todo in system by his id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        }
      },
      "patch": {
        "tags": ["Todos"],
        "description": "Update todo in system",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Todo's Id required for update.",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          },
          {
            "name": "todo",
            "in": "body",
            "description": "Todo that we want to update",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Todo is updated",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        }
      },
      "delete": {
        "tags": ["Todos"],
        "description": "Delete todo in system by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Todo's Id required for delete.",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Todo is deleted",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": ["username", "_id", "email", "password", "role"],
      "properties": {
        "_id": {
          "type": "ObjectId",
          "uniqueItems": true
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "role": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Todo": {
      "required": ["username", "_id", "email", "password", "role"],
      "properties": {
        "_id": {
          "type": "ObjectId",
          "uniqueItems": true
        },
        "title": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "user_id": {
          "type": "ObjectId",
          "uniqueItems": true
        },
        "tasks": [
          {
            "title": "string",
            "type": "string"
          }
        ]
      }
    },
    "Todos": {
      "type": "array",
      "$ref": "#/definitions/Todo"
    }
  }
}
